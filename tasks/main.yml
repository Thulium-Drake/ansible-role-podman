---
- name: 'Ensure container user when confiured for rootless'
  when: podman_rootless
  block:
    - name: 'Ensure user account'
      ansible.builtin.user:
        name: "{{ podman_user_account }}"
        comment: 'Podman Container user'
        home: "{{ podman_user_home }}"
        shell: "{{ podman_user_shell }}"
        state: 'present'

    - name: 'Ensure lingering enabled'
      ansible.builtin.command: "loginctl enable-linger {{ podman_user_account }}"
      args:
        creates: "/var/lib/systemd/linger/{{ podman_user_account }}"

    - name: 'Ensure subordinate user IDs'
      ansible.builtin.lineinfile:
        path: "/etc/sub{{ file }}"
        line: "{{ podman_user_account }}:{{ podman_user_subid_range_start }}:65536"
        regexp: "^{{ podman_user_account }}*"
        state: 'present'
      loop:
        - 'uid'
        - 'gid'
      loop_control:
        loop_var: 'file'

- name: 'Ensure packages'
  ansible.builtin.package:
    name:
      - 'podman'
    state: 'present'

- name: 'Ensure registry configuration'
  ansible.builtin.template:
    src: 'registries.conf.j2'
    dest: '/etc/containers/registries.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Log in on password protected registries'
  containers.podman.podman_login:
    username: "{{ registry['username'] }}"
    password: "{{ registry['password'] }}"
    registry: "{{ registry['location'] }}"
    authfile: '~/.config/containers/auth.json'
  loop: "{{ podman_registries }}"
  loop_control:
    loop_var: 'registry'
  become: "{{ (podman_rootless) | ternary(true, omit) }}"
  become_user: "{{ (podman_rootless) | ternary(podman_user_account, omit) }}"
  no_log: "{{ not podman_debug }}"
  when:
    - registry['username'] is defined
    - registry['password'] is defined

- name: 'Ensure storage configuration'
  community.general.ini_file:
    path: "{{ podman_rootless | ternary('~/.config', '/etc') }}/containers/storage.conf"
    section: "{{ storage['section'] }}"
    option: "{{ storage['option'] }}"
    value: "\"{{ storage['value'] }}\""
    owner: "{{ podman_rootless | ternary(podman_user_account, 'root') }}"
    group: "{{ podman_rootless | ternary(podman_user_account, 'root') }}"
    mode: '0644'
  loop: "{{ podman_storage }}"
  loop_control:
    loop_var: 'storage'
  become: "{{ (podman_rootless) | ternary(true, omit) }}"
  become_user: "{{ (podman_rootless) | ternary(podman_user_account, omit) }}"
  when: podman_storage | length > 0

- name: 'Ensure containers configuration'
  community.general.ini_file:
    path: "{{ podman_rootless | ternary('~/.config', '/etc') }}/containers/containers.conf"
    section: "{{ containers['section'] }}"
    option: "{{ containers['option'] }}"
    value: "\"{{ containers['value'] }}\""
    owner: "{{ podman_rootless | ternary(podman_user_account, 'root') }}"
    group: "{{ podman_rootless | ternary(podman_user_account, 'root') }}"
    mode: '0644'
  loop: "{{ podman_containers }}"
  loop_control:
    loop_var: 'containers'
  become: "{{ (podman_rootless) | ternary(true, omit) }}"
  become_user: "{{ (podman_rootless) | ternary(podman_user_account, omit) }}"
  when: podman_containers | length > 0

- name: 'Ensure Podman services'
  ansible.builtin.service:
    name: "{{ service }}"
    state: 'started'
    enabled: true
    scope: "{{ (podman_rootless) | ternary('user', 'system', 'system') }}"
  become: "{{ (podman_rootless) | ternary(true, omit) }}"
  become_user: "{{ (podman_rootless) | ternary(podman_user_account, omit) }}"
  loop:
    - 'podman.socket'
    - 'podman-auto-update.timer'
  loop_control:
    loop_var: 'service'

- name: 'Remove user sockets for Podman'
  ansible.builtin.file:
    path: "{{ file }}"
    state: 'absent'
  loop:
    - '/usr/lib/systemd/user/podman-auto-update.service'
    - '/usr/lib/systemd/user/podman-auto-update.timer'
    - '/usr/lib/systemd/user/podman-kube@.service'
    - '/usr/lib/systemd/user/podman-restart.service'
    - '/usr/lib/systemd/user/podman.service'
    - '/usr/lib/systemd/user/podman.socket'
  loop_control:
    loop_var: 'file'
  when:
    - podman_disable_user_sockets
    - not podman_rootless
